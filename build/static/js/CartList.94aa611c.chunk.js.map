{"version":3,"file":"static/js/CartList.94aa611c.chunk.js","mappings":"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","sources":["components/cart/Cart.tsx","webpack://cart_shop/./src/components/ErrorBeckend/ErrorBeckend.module.scss?3e12","components/ErrorBeckend/index.tsx","containers/CartList.tsx"],"sourcesContent":["import './Cart.scss';\r\n\r\ntype CartProps = {\r\n  articul: string;\r\n  title: string;\r\n  image: string;\r\n  currency: string;\r\n  quantity: number;\r\n  priceAllItem: string | number;\r\n  cost: string | number;\r\n};\r\n\r\nconst Cart: React.FC<CartProps> = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\" cart__one-product\">\r\n        <table>\r\n          <tbody>\r\n            <tr className=\"cart__goods-list\">\r\n              <td>Name good</td>\r\n              <td>Price for one item</td>\r\n              <td>Quantity</td>\r\n              <td>Price all item</td>\r\n            </tr>\r\n            <tr className=\"cart__goods\">\r\n              <td className=\"cart__goods-name\">\r\n                <h2 className=\"cart__goods-title\">{props.title}</h2>\r\n                <img\r\n                  className=\"cart__image-table-td\"\r\n                  src={props.image}\r\n                  alt={props.title}\r\n                />\r\n              </td>\r\n              <td className=\"cart__goods-price-one\">\r\n                {props.cost} {props.currency}\r\n              </td>\r\n              <td className=\"cart__goods-quantity\">{props.quantity}</td>\r\n              <td className=\"cart__goods-price-all\">{props.priceAllItem}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div className=\"cart__btn-block\">\r\n          <button\r\n            className=\"cart__delete-one-position delete-one-position btn\"\r\n            data-key={props.articul}>\r\n            Delete one position\r\n          </button>\r\n          <button\r\n            className=\"cart__delete-quantity delete-quantity btn\"\r\n            data-key={props.articul}>\r\n            Delete quantity\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ErrorBeckend_root__F2ACB\"};","import { useDispatch } from 'react-redux';\r\n\r\nimport style from './ErrorBeckend.module.scss';\r\n\r\nimport { clearCart } from '../../store/cartSlice';\r\n\r\nconst ErrorBeckend: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <div></div>\r\n      <div className={style.root}>\r\n        <h1>Ой... Мы не можем отобразить товар.</h1>\r\n        <br />\r\n        <p>\r\n          Ошибка бекенда. Наша серверная часть не может отправить список\r\n          корзины.\r\n        </p>\r\n        <br />\r\n\r\n        <p>\r\n          Внимание! Для отображения корзины сначала выберите все фильры, потом\r\n          добавляйте товар в корзину.\r\n        </p>\r\n        <br></br>\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            dispatch(clearCart());\r\n          }}>\r\n          Очистить корзину и создать новую\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorBeckend;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport {\r\n  fullQuantityGoods,\r\n  fullQuantity,\r\n  selectCostFlag,\r\n  selectCurrensy,\r\n} from '../store/goodsSlice';\r\nimport {\r\n  selectCart,\r\n  minus,\r\n  del,\r\n  cartOpen,\r\n  selectCartOpenSt,\r\n  CartItem,\r\n  selectCartOpenErrorSt,\r\n  clearCart,\r\n} from '../store/cartSlice';\r\nimport { itemsReindexing } from '../store/furnitureSlice';\r\n\r\nimport Cart from '../components/cart/Cart';\r\nimport ErrorBeckend from '../components/ErrorBeckend';\r\nimport { useAppDispatch } from '../store';\r\n\r\nconst CartList: React.FC = () => {\r\n  const dispath = useAppDispatch();\r\n  const selCartOpenSt: boolean = useSelector(selectCartOpenSt);\r\n  const selCartOpenErrorSt: boolean = useSelector(selectCartOpenErrorSt);\r\n  const selCostFlag: boolean = useSelector(selectCostFlag);\r\n  const currency: string = useSelector(selectCurrensy);\r\n  const goodsReindex: any = useSelector(itemsReindexing);\r\n  const cart: CartItem = useSelector(selectCart);\r\n\r\n  const catCartRef = useRef(null);\r\n\r\n  let fullQuantityGoodsCart = useSelector(fullQuantityGoods);\r\n\r\n  // fullPrice ----------------------------------------------------------\r\n  const fullPrice = (): number => {\r\n    const fullPriceArr: number[] = Object.keys(cart).map((el) => {\r\n      const priceInObj: number = goodsReindex[el].cost;\r\n\r\n      let price: number = 0;\r\n      return (price += (Number(\r\n        !selCostFlag && goodsReindex ? priceInObj : priceInObj / 95\r\n      ) * cart[el]) as number);\r\n    });\r\n\r\n    let sum: number = 0;\r\n    for (let i = 0; i < fullPriceArr.length; i++) {\r\n      sum += fullPriceArr[i];\r\n    }\r\n    return sum;\r\n  };\r\n\r\n  //=========================================================\r\n  useEffect(() => {\r\n    if (fullQuantityGoodsCart !== undefined) {\r\n      dispath(\r\n        fullQuantity(\r\n          Object.values(cart).reduce((a: number, b: number) => a + b, 0)\r\n        )\r\n      );\r\n    }\r\n  }, [cart, fullQuantityGoodsCart, dispath]);\r\n\r\n  useEffect(() => {\r\n    if (selCartOpenSt && fullQuantityGoodsCart === 0) dispath(cartOpen(false));\r\n  }, [fullQuantityGoodsCart, selCartOpenSt, dispath]);\r\n\r\n  // cart close in btn-close ===========================================================================\r\n  const hadlerClose = (e: any) => {\r\n    if (catCartRef.current && fullQuantityGoodsCart !== 0) {\r\n      // catCartRef.current.classList.toggle('activ');\r\n      dispath(cartOpen(false));\r\n    }\r\n  };\r\n  // cart close in window ===========================================================================\r\n  useEffect(() => {\r\n    const cartIcon: Element = document.getElementsByClassName('cart-btn')[0];\r\n\r\n    const handleClickOutside = (e: MouseEvent) => {\r\n      const _event = e as MouseEvent & {\r\n        composedPath(): Node[];\r\n      };\r\n      if (\r\n        ![catCartRef.current, cartIcon].some(\r\n          (x: Element | null) => x && _event.composedPath().includes(x)\r\n        )\r\n      ) {\r\n        dispath(cartOpen(false));\r\n      }\r\n    };\r\n\r\n    document.body.addEventListener('click', handleClickOutside);\r\n\r\n    return () => document.body.removeEventListener('click', handleClickOutside); //unMount- сработает при размонтировании, при ухода со стр! //добавляем удаление обработчика, т.к. при ухода со стр стрый обработчик остается! return - сделай при размонтировании\r\n  }, []);\r\n\r\n  // clickHandler ------------------------------------------------------\r\n  let clickHandler = (e: any) => {\r\n    e.preventDefault();\r\n\r\n    let targ = e.target;\r\n    if (targ.classList.contains('delete-one-position')) {\r\n      dispath(minus(targ.getAttribute('data-key')));\r\n    }\r\n    if (targ.classList.contains('delete-quantity')) {\r\n      dispath(del(targ.getAttribute('data-key')));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selCartOpenSt && (\r\n        <section\r\n          className=\"main__goods-table-wrapper goods-table\"\r\n          ref={catCartRef}>\r\n          {selCartOpenErrorSt && Object.keys(cart).length ? (\r\n            <div className=\"main__goods-table\" onClick={clickHandler}>\r\n              <div className=\"goods-table__full-goods-block\">\r\n                <ul className=\"goods-table__full-goods\">\r\n                  {Object.keys(cart).map((el: string, i: number) => {\r\n                    const item = goodsReindex[el];\r\n                    return (\r\n                      <li className=\"goods-table__item\" key={item.title + i}>\r\n                        {item.title} - {cart[el]}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n                <div className=\"goods-table__clear-cart\">\r\n                  <button\r\n                    onClick={() => dispath(clearCart())}\r\n                    className=\"goods-block__add-to-cart  btn clear-cart\">\r\n                    Clear cart\r\n                  </button>\r\n                </div>\r\n                <div\r\n                  className=\"goods-table__full-goods-close\"\r\n                  onClick={hadlerClose}></div>\r\n              </div>\r\n              <div className=\"cart__full-price\">\r\n                Full price: {fullPrice()} {currency}\r\n              </div>\r\n              <div className=\"goods-table__cart cart\">\r\n                {Object.keys(cart).map((el: string, i: number) => {\r\n                  const item = goodsReindex[el as keyof typeof goodsReindex];\r\n\r\n                  return (\r\n                    <Cart\r\n                      key={item.title + i}\r\n                      title={item.title}\r\n                      cost={\r\n                        !selCostFlag ? item.cost : (item.cost / 95).toFixed(0)\r\n                      }\r\n                      currency={currency}\r\n                      quantity={cart[el]}\r\n                      priceAllItem={\r\n                        !selCostFlag\r\n                          ? Number(item.cost) * cart[el]\r\n                          : Number((item.cost / 95).toFixed(0)) * cart[el] +\r\n                            ' ' +\r\n                            currency\r\n                      }\r\n                      image={item.image}\r\n                      articul={item.articul}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <ErrorBeckend />\r\n          )}\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartList;\r\n"],"names":["props","_jsx","_Fragment","children","_jsxs","className","title","src","image","alt","cost","currency","quantity","priceAllItem","articul","ErrorBeckend","dispatch","useDispatch","style","onClick","clearCart","CartList","dispath","useAppDispatch","selCartOpenSt","useSelector","selectCartOpenSt","selCartOpenErrorSt","selectCartOpenErrorSt","selCostFlag","selectCostFlag","selectCurrensy","goodsReindex","itemsReindexing","cart","selectCart","catCartRef","useRef","fullQuantityGoodsCart","fullQuantityGoods","useEffect","undefined","fullQuantity","Object","values","reduce","a","b","cartOpen","cartIcon","document","getElementsByClassName","handleClickOutside","e","_event","current","some","x","composedPath","includes","body","addEventListener","removeEventListener","ref","keys","length","preventDefault","targ","target","classList","contains","minus","getAttribute","del","map","el","i","item","fullPrice","fullPriceArr","priceInObj","Number","sum","Cart","toFixed"],"sourceRoot":""}